<project name="GeographicLib" default="compile" basedir=".">
  <description>
	GeographicLib ant build script JNI Java wrappers.
  </description>
  <property file="build.properties"/>

  <path id="classpath">
	<pathelement location="${build.dir}"/>
    <!-- 
         Insert all libraries inside lib/ to the classpath.
         erroronmissingdir="false" tells ant that a build error should not
         occur if the lib/ directory is not found. This way it is only used
         if lib/ is present (ideal).
    -->
	<fileset dir="${lib.dir}" includes="**/*.jar" erroronmissingdir="false"/>
  </path>

  <path id="compile.classpath">
	<path refId="classpath"/>
	<pathelement location="${src.dir}"/>
  </path>

  <target name="init">
	<tstamp>
	  <format property="current.time" pattern="yyyy-MM-dd'T'HH:mm:ssZ'Z'"/>
	</tstamp>
  </target>

  <!-- Cleans all files that are generated by this build script -->
  <target name="clean">
    <!-- All *.class binary files -->
	<delete dir="${build.dir}"/>
    <!-- All *.jar files -->
	<delete dir="${jar.dir}"/>
    <!-- All JavaDoc files -->
	<delete dir="${doc.dir}"/>
  </target>

  <!-- 
       Compiles all of the java files inside the ${src.dir}, placing all
       binary files (*.class) inside ${build.dir}
  -->
  <target name="compile" depends="init">
	<mkdir dir="${build.dir}"/>
	<javac classpathref="compile.classpath" 
           srcdir="${src.dir}"
		   destdir="${build.dir}" 
           includeAntRuntime="no"
           failonerror="true"
           listfiles="true"
           debug="true"
           debuglevel="lines,vars,source"/>
  </target>

  <!-- Generates the Java Docs files and places them into ${doc.dir} -->
  <target name="document">
	<mkdir dir="${doc.dir}"/>
	<javadoc sourcepath="${src.dir}"
             classpathref="compile.classpath" 
             destdir="${doc.dir}"
             windowtitle="GeographicLib API"
             doctitle="GeographicLib API">
      <!-- 
           Put links to Java API into the java docs (So things like 
           java.lang.String are automaticaly linked to the Oracle docs
      -->
      <link href="http://download.oracle.com/javase/7/docs/api/"/>
    </javadoc>
  </target>
  
  <!-- Alias for the "document" target -->
  <target name="doc" depends="document"/>

  <!-- Builds a jar containing only binary (.class) files -->
  <target name="jar.bin" depends="compile">
	<mkdir dir="${jar.dir}"/>
    <jar basedir="${build.dir}" destfile="${jar.dir}/${jar.name}.jar">
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Built-On" value="${current.time}"/>
        <attribute name="Implementation-Version" value="${version.num}"/>
      </manifest>
    </jar>
  </target>

  <!-- Builds a jar containing the java source files. -->
  <target name="jar.src">
	<mkdir dir="${jar.dir}"/>
	<jar basedir="${src.dir}" destfile="${jar.dir}/${jar.name}-src.jar"
         includes="**/*.java">
	  <manifest>
		<attribute name="Built-By" value="${user.name}"/>
		<attribute name="Built-On" value="${current.time}"/>
		<attribute name="Implementation-Version" value="${version.num}"/>
	  </manifest>
	</jar>
  </target>

  <!-- Builds a jar containing the Java Docs documentation files. -->
  <target name="jar.doc" depends="compile, document">
	<mkdir dir="${jar.dir}"/>
	<jar basedir="${doc.dir}" destfile="${jar.dir}/${jar.name}-doc.jar">
	  <manifest>
		<attribute name="Built-By" value="${user.name}"/>
		<attribute name="Built-On" value="${current.time}"/>
		<attribute name="Implementation-Version" value="${version.num}"/>
	  </manifest>
	</jar>
  </target>

  <!-- Alias for building all the JARs -->
  <target name="jar" depends="jar.bin, jar.src, jar.doc"/>
  
  <!-- Alias for building all the JARs -->
  <target name="dist" depends="jar"/>

  <!-- Execute the test class -->
  <target name="test" depends="compile">
	<java classpathref="compile.classpath" classname="net.sf.geographiclib.Test" fork="true">
	  <jvmarg value="-Xdebug"/>
	  <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=n"/>
	</java>
  </target>

  <!-- Execute the test class but pause before main() is executed (for debugging) -->
  <target name="test.debugstartup" depends="compile">
	<java classpathref="compile.classpath" classname="net.sf.geographiclib.Test" fork="true">
	  <jvmarg value="-Xdebug"/>
	  <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,address=8000,suspend=y"/>
	</java>
  </target>
</project>
